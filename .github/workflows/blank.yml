name: T6-OpenWrt

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  openwrt_build:
    name: openwrt build
    runs-on: ubuntu-22.04
    steps:
    - name: Show system
      run: |
        lscpu
        free -h
        df -h
        uname -a

    - name: Free disk space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 4096
        temp-reserve-mb: 128
        swap-size-mb: 512
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        sudo apt-get -y purge firefox clang* ghc* google* llvm* mono* mongo* mysql* php*
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq full-upgrade -y
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev clang-13 llvm-13
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        sudo -E git config --global advice.detachedHead false
        
    - name: Clone
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Patch
      run: |
        /bin/bash prepare.sh   

    - name: Install
      run: |
        cd openwrt
        ./scripts/feeds update -a && ./scripts/feeds install -a        

    - name: Makeconfig
      run: |
        cp -rf seed/nanopc-t6/config.seed openwrt/.config
        cd openwrt
        make defconfig
        make download -j8 V=10
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf *.bin
        rm -rf *.buildinfo 
        rm -rf *.json 
        rm -rf *.manifest 
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
